version: "3"
build:
  steps:
    - type: apt-get
      packages: [
        "build-essential",    # Includes g++, make, and essential build tools
        "cmake",             # Modern C++ build system
        "gdb",              # Debugger
        "curl",
        "clang",            # Alternative compiler
        "clang-format",     # Code formatter
        "valgrind",         # Memory checker
        "apt-transport-https", # Required for Bazel installation
        "gnupg"             # Required for Bazel installation
      ]
    # Install Bazel
    - type: command
      command: |
        curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
        sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
        echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
        sudo apt update
        sudo apt install -y bazel
      user: devzero
    - type: command
      command: sudo rm /etc/update-motd.d/**
    - type: file
      content: |
        #include <iostream>

        int main(int argc, char *argv[])
        {
          std::cout << "Hello, World!" << std::endl;
        }
      path: /home/devzero/main.cc
      permissions: "0664"
      user: devzero
    - type: file
      content: |
        cc_binary(
            name = "main",
            srcs = ["main.cc"],
        )
      path: /home/devzero/BUILD
      permissions: "0664"
      user: devzero
    - type: command
      command: touch /home/devzero/WORKSPACE
      user: devzero
    - type: file
      content: |
        # Remote execution and caching configuration
        build:remote --remote_executor=grpc://atomic-sparrow-jjoh:8980
        build:remote --remote_cache=grpc://atomic-sparrow-jjoh:8980
        
        # Default to use both remote execution and caching
        build --config=remote
        
        # General build settings
        build --incompatible_enable_cc_toolchain_resolution=false
        build --action_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=0
      path: /home/devzero/.bazelrc
      permissions: "0664"
      user: devzero
    - type: command
      command: |
        printf 'echo "\nðŸ‘‹ Welcome to the DevZero C++ Starter Template! This workspace includes essential C++ development tools including Bazel, g++, cmake, and debugging tools.\n\nðŸ¤˜ To get started in this workspace you can:\n- Build with Bazel: bazel build :main\n- Build and run: bazel run :main\n\nRemote execution and caching are configured by default via .bazelrc\n\nThe best way to leverage DevZero is to write your own recipes. You can add your repositories and configure the workspace to mirror your production environments. Here is how to get started: https://docs.devzero.io/product-docs/recipes/create-recipe\n"' >> /home/devzero/.bashrc